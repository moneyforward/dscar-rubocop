version: 2.1

description: Delta Rubocop Reports

orbs:
  dscar: naokikimura/dscar@0.1.0

executors:
  default:
    description: Default Rubocop execution environment
    parameters:
      docker-image:
        description: Specify the image used to execute Rubocop
        type: string
        default: circleci/ruby
    docker:
      - image: << parameters.docker-image >>

commands:
  execute:
    description: Calculate the difference of Rubocop results between HEAD branch and BASE branch
    parameters:
      prepare-to-execute:
        description: Specify the required steps before execute if necessary
        type: steps
        default: []
      analysis-command-version:
        description: The command version used for analysis
        type: string
        default: ""
      analysis-arguments:
        description: Arguments of rubocop command
        type: string
        default: ""
      test-results-path:
        description: Specify the value of the path parameter in the store_test_results step if you need to change it
        type: string
        default: "/tmp/test-results"
      analysis-result-format:
        description: Specify "RuboCop::Formatter::JUnitFormatter" if you want to use a non-standard formatter
        type: enum
        enum: ["junit", "RuboCop::Formatter::JUnitFormatter"]
        default: "junit"
    steps:
      - when:
          condition: << parameters.analysis-command-version >>
          steps:
            - dscar/execute:
                prepare-to-execute:
                  - run:
                    environment:
                      GEMS: rubocop:0.80 rubocop:<< parameters.analysis-command-version >> rubocop rubocop-performance rubocop-rails
                    command: sudo gem install $GEMS
                  - steps: << parameters.prepare-to-execute >>
                analysis-name: Rubocop
                analysis-command: rubocop
                analysis-arguments: |
                  _<< parameters.analysis-command-version >>_
                  << parameters.analysis-arguments >>
                  -f << parameters.analysis-result-format >>
                  -C false
                calculate-options: --test-case-key=concat(@classname,"#",@name,"=>",normalize-space())
                test-results-path: << parameters.test-results-path >>
      - unless:
          condition: << parameters.analysis-command-version >>
          steps:
            - dscar/execute:
                prepare-to-execute:
                  - run: sudo gem install rubocop rubocop-performance rubocop-rails
                  - steps: << parameters.prepare-to-execute >>
                analysis-name: Rubocop
                analysis-command: rubocop
                analysis-arguments: |
                  << parameters.analysis-arguments >>
                  -f << parameters.analysis-result-format >>
                  -C false
                calculate-options: --test-case-key=concat(@classname,"#",@name,"=>",normalize-space())
                test-results-path: << parameters.test-results-path >>

jobs:
  execute:
    description: Calculate the difference of Rubocop results between HEAD branch and BASE branch
    parameters:
      executor:
        type: executor
        default: default
      prepare-to-execute:
        description: Specify the required steps before execute if necessary
        type: steps
        default: []
      analysis-command-version:
        description: The command version used for analysis
        type: string
        default: ""
      analysis-arguments:
        description: Arguments of rubocop command
        type: string
        default: ""
      test-results-path:
        description: Specify the value of the path parameter in the store_test_results step if you need to change it
        type: string
        default: "/tmp/test-results"
      analysis-result-format:
        description: Specify "RuboCop::Formatter::JUnitFormatter" if you want to use a non-standard formatter
        type: enum
        enum: ["junit", "RuboCop::Formatter::JUnitFormatter"]
        default: "junit"
    executor: << parameters.executor >>
    steps:
      - execute:
          prepare-to-execute: << parameters.prepare-to-execute >>
          analysis-command-version: << parameters.analysis-command-version >>
          analysis-arguments: << parameters.analysis-arguments >>
          test-results-path: << parameters.test-results-path >>
          analysis-result-format: << parameters.analysis-result-format >>

examples:

  v0_80-or-newer:
    description: Example that can be executed in v0.80 or newer
    usage:
      version: 2.1
      orbs:
        dscar: naokikimura/dscar-rubocop@0.0.4
      workflows:
        analyze-code-statically:
          jobs:
            - dscar-rubocop/execute:
                name: rubocop

  older-than-v0_80:
    description: Example that cannot be executed unless it is older than v0.80
    usage:
      version: 2.1
      orbs:
        dscar: naokikimura/dscar-rubocop@0.0.4
      workflows:
        analyze-code-statically:
          jobs:
            - dscar-rubocop/execute:
                name: rubocop
                executor:
                  name: dscar-rubocop/default
                  docker-image: circleci/ruby:2.7.0
                prepare-to-execute:
                    - run:
                        command: |
                          sudo gem uninstall -a rubocop-performance
                          sudo gem install rubocop-performance:1.3.0
                analysis-command-version: 0.68.1
                analysis-arguments: "-r /usr/local/lib/ruby/gems/2.7.0/gems/rubocop-0.80.0/lib/rubocop/formatter/junit_formatter.rb"
                analysis-result-format: "RuboCop::Formatter::JUnitFormatter"
